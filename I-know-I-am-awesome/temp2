const { Client, Collection } = require("discord.js");
const { readdirSync } = require("fs");
const { join } = require("path");
const { PREFIX } = require("./config.json");
const client = new Client({ disableMentions: "everyone" });

client.login(process.env.TOKEN);
client.commands = new Collection();
client.prefix = PREFIX;
client.queue = new Map();

client.once('ready', () => {
  console.log('Ready!');
  let statuses = [
        ` ${client.users.cache.size} users! `,
        `${PREFIX}help | @I Know I Am Awesome`,
        `${client.guilds.cache.size} servers! `
      ];
      

      setInterval(function () {
        let status = statuses[Math.floor(Math.random() * statuses.length)];
        client.user.setActivity(status, { type: "WATCHING" });
     }, 10000);
});
client.on("warn", (info) => console.log(info));
client.on("error", console.error);

client.on('guildCreate', guild => {
    const channel = guild.channels.cache.find(channel => channel.type === 'text' && channel.permissionsFor(guild.me).has('SEND_MESSAGES'))
    channel.send("Thanks for invite me! type `x!help` for more info")
})

client.on('message', async (message) => {
  if (message.content.toLowerCase().startsWith(`${client.prefix}eval`)) {
    const owner = ["772408057929662485", "564853227393122307"] 
  if (!owner.includes(message.author.id)) return;
  try {
  let result = message.content.split(" ").slice(1).join(" ")
   let evalved = await eval(`(async() => { ${result} })()`);
  message.channel.send(evalved)
  } catch (err) {
    let embed = new Discord.MessageEmbed()
    .setTitle('Error!')
    .setDescription(`\`\`\`js\n${err}\`\`\``)
    message.channel.send(embed)
  }
  }
});

const commandFiles = readdirSync(join(__dirname, "commands")).filter((file) => file.endsWith(".js"));
for (const file of commandFiles) {
  const command = require(join(__dirname, "commands", `${file}`));
  client.commands.set(command.name, command);
}

client.on("message", async (message) => {
  if (message.author.bot) return;
  if (!message.guild) return;
  
    if (message.content.indexOf(PREFIX) !== 0) return;

    const args = message.content.slice(PREFIX.length).trim().split(/ +/g);
    const commandName = args.shift().toLowerCase(); 

  const command =
    client.commands.get(commandName) ||
    client.commands.find((cmd) => cmd.aliases && cmd.aliases.includes(commandName));
    
if (!command) return;

  try {
    command.execute(message, args);
  } catch (error) {
    console.error(error);
    message.reply("There was an error executing that command.").catch(console.error);
  }
});

var http = require('http');
http
	.createServer(function(req, res) {
		res.write("chai peelo frands");
		res.end();
	})
	.listen(8080);